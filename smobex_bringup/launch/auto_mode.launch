<?xml version="1.0"?>
<launch>

    <arg name="robot_ip" doc="IP of the manipulator"/>
    <arg name="online" doc="If robot is online or not"/>
    <arg name="octo_resolution" doc="Resolution of the OctoMap"/>

    <arg name="scale" default="5" />

    <!-- Initializing robot and camera calibrated -->
    <!-- <include file="$(find smobex_calibration)/launch/calibrated.launch">
        <arg name="robot_ip" value="$(arg robot_ip)" />
        <arg name="online" value="$(arg online)"/>
    </include> -->
    <include file="$(find smobex_bringup)/launch/moveit_robot.launch">
        <arg if="$(arg online)" name="sim" value="false"/>
        <arg name="robot_ip" value="$(arg robot_ip)"/>
    </include>

    <!-- Init point cloud spacial filter, operation mode -->
    <node pkg="point_cloud_spatial_filter" type="point_cloud_spatial_filter_node" name="point_cloud_filter" output="screen">

        <param name="point_cloud_in" value="/camera/depth_registered/points"/>
        <param name="fixed_frame_id" value="/base_link"/>
        <param name="wireframe" value="true"/>
        <param name="scale" value="$(arg scale)"/>

        <param name="configure" value="false"/>
        <param name="voxelize" value="false"/>

        <rosparam file="$(find smobex_bringup)/params/default_params.yaml" command="load" />

        <param name="params_path" value="$(find smobex_bringup)"/>

    </node>

    <!-- OctoMap Server -->
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server_node">

        <remap from="cloud_in" to="point_cloud_filter/points" />
        <!-- <remap from="cloud_in" to="camera/depth_registered/points"/> -->
        <!-- <remap from="cloud_in" to="pcl_filters/pcl_filtered" /> -->
        <param name="publish_free_space" value="true"/>

        <param name="~frame_id" value="base_link" />
        <param name="~resolution" value="$(arg octo_resolution)"/>

    </node>

    <rosparam file="$(find smobex_bringup)/params/default_params.yaml" command="load"/>

    <!-- Unknown space show -->
    <node pkg="world_model_consistency_check" type="octomap_bounding_box" name="octomap_bounding_box" output="screen">

        <param name="~resolution" value="$(arg octo_resolution)"/>
        <param name="~fixed_frame" value="/base_link"/>
        <param name="~rate" value="25"/>

        <remap from="~min_x" to="x_min"/>
        <remap from="~min_y" to="y_min"/>
        <remap from="~min_z" to="z_min"/>

        <remap from="~max_x" to="x_max"/>
        <remap from="~max_y" to="y_max"/>
        <remap from="~max_z" to="z_max"/>

    </node>

    <!-- Pose Evaluator -->
    <!-- <node pkg="smobex_explorer" type="robot_pose_evaluator" name="robot_pose_evaluator" output="screen">
        <param name="~frame_id" value="/base_link"/>

        <rosparam file="$(find smobex_bringup)/params/camera_specs.yaml" command="load" />

    </node> -->

    <!-- Pose Generator -->
    <!-- <node pkg="smobex_explorer" type="explorer_node" name="explorer_node" output="screen">

        <param name="~fixed_frame" value="/base_link"/>
        <param name="~n_poses" value="5"/>
        <param name="~r_min" value="0.8"/>
        <param name="~r_max" value="1.2"/>

    </node> -->

    <arg name="action_name" default="SmobexExplorerActionSkill"/>

    <node pkg="smobex_explorer" type="robot_pose_evaluator" name="robot_pose_evaluator" output="screen">

        <param name='action_name' value='$(arg action_name)' />

        <param name="~frame_id" value="/base_link"/>
        <param name="~n_poses" value="150"/>
        <param name="~threshold" value="0.005"/>

        <rosparam file="$(find smobex_bringup)/params/camera_specs.yaml" command="load" />

    </node>

    <node name="smobex_explorer_action_skill" pkg="smobex_explorer_action_skill_server" type="smobex_explorer_action_skill_server" output="screen">

        <param name='action_name' value='$(arg action_name)' />

        <param name="~frame_id" value="/base_link"/>

        <rosparam file="$(find smobex_bringup)/params/camera_specs.yaml" command="load" />

    </node>


    <!-- Rviz for visualization -->
    <node pkg="rviz" type="rviz" name="rviz" args="--display-config $(find smobex_bringup)/config/operation_mode.rviz" required="true"/>

</launch>